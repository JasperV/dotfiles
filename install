#!/bin/zsh

set -e

# Navigate to home directory
cd $HOME

# Ask for the administrator password upfront
sudo -v -B -p "Password for unattended install: "

# Keep sudo session alive until we're done
while true; do sudo -n true; sleep 60; kill -0 "$$" || exit; done 2>/dev/null &

# Validate yourself and as admin
[ "$USER" = "root" ] && abort "Run this script as yourself, not as root."
groups | grep -q $Q -E "\b(admin)\b" || abort "Add $USER to the admin group."

# Prevent sleeping during script execution, as long as the machine is on AC power
caffeinate -d -s -w $$ &

# Set some variables to use during install
HOMEBREW_NO_ANALYTICS=1
HOMEBREW_BUNDLE_NO_LOCK=1
HOMEBREW_CLEANUP_MAX_AGE_DAYS=0
HOMEBREW_NO_ENV_HINTS=1

if [[ -z "$REPO" ]]; then
  REPO="jasperv/dotfiles"
  REBOOT=0
else
  REBOOT=1
fi

DF_BRANCH=macos

export LOCKSCREEN_MESSAGE=$(defaults read /Library/Preferences/com.apple.loginwindow LoginwindowText)
export COMPUTERNAME=$(scutil --get ComputerName)

if test "${LOCKSCREEN_MESSAGE#*Deze computer gevonden?}" = "$LOCKSCREEN_MESSAGE"
then
  vared -p "Phonenumber for lock screen message: " -c PHONENUMBER
  export PHONENUMBER=$PHONENUMBER
fi

if test "${COMPUTERNAME#*MacBook Pro}" != "$COMPUTERNAME"
then
  vared -p "Computer network name: " -c PCNAME
  export PCNAME=$PCNAME
fi

# Install/update Homebrew
if ! brew -v 2>/dev/null; then
  echo | /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
else
  echo "Homebrew already installed. Updating..."
fi

# Disable brew analytics
brew analytics off

# Update brew to latest available version
brew update --quiet && brew upgrade --quiet && brew cleanup --quiet

# Download Brewfile if not exists
if [ ! -f "$HOME/Brewfile" ]; then
  curl -o Brewfile -fsSL https://raw.githubusercontent.com/$REPO/$DF_BRANCH/Brewfile
fi

# Install Homebrew packages
brew bundle --quiet --no-lock || true

# Create LaunchAgents directory for brew autoupdate to work in
mkdir -p $HOME/Library/LaunchAgents

# Set brew to autoupdate
UPDATE_STARTED=$(brew autoupdate status)

if [[ $UPDATE_STARTED != *"installed"* ]]; then
  brew autoupdate start --upgrade --cleanup --enable-notification
fi

# Cleanup after brew
brew cu -a -y -q
brew cleanup --prune=all
brew bundle cleanup --quiet --no-lock --force
sudo rm -rf "$(brew --cache)"

# Install dotfiles
if [ ! -d "$HOME/.files" ]; then
  git clone --bare "https://github.com/$REPO.git" "$HOME/.files"

  # Reset the unstaged changes before updating
  git --git-dir=$HOME/.files --work-tree=$HOME reset --hard

  # Set flag to ignore untracked files
  git --git-dir=$HOME/.files --work-tree=$HOME config --local status.showUntrackedFiles no
fi

if [[ `git --git-dir=$HOME/.files --work-tree=$HOME status --porcelain` ]]; then
  echo "dotfiles local changes found, not updating from origin"
else
  git --git-dir=$HOME/.files --work-tree=$HOME checkout $DF_BRANCH
  git --git-dir=$HOME/.files --work-tree=$HOME pull origin $DF_BRANCH
fi

# Change default shell to Homebrew installed Zsh
BREW_ZSH_LOCATION="$(brew --prefix)/bin/zsh"

if ! fgrep -q $BREW_ZSH_LOCATION /etc/shells; then
  echo $BREW_ZSH_LOCATION | sudo tee -a /etc/shells
  sudo chsh -s $BREW_ZSH_LOCATION $USER
fi

# configure macOS and Applications
# ./.macos

touch .hushlogin
mkdir -p src
mkdir -p Files/Google\ Drive
mkdir -p Files/Gmail

echo "âœ” Done." # TODO: colorize emoji

