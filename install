#!/bin/zsh

# Install script

# Navigate to home directory
cd ~

# Ask for the administrator password upfront
sudo -v

# Keep sudo session persistent
while true; do sudo -n true; sleep 60; kill -0 "$$" || exit; done 2>/dev/null &



# Check for macOS updates
touch /tmp/.com.apple.dt.CommandLineTools.installondemand.in-progress;
# sudo softwareupdate -i -a --restart
rm /tmp/.com.apple.dt.CommandLineTools.installondemand.in-progress



# Install Homebrew if not already installed
if ! brew -v 2>/dev/null; then
  /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
fi



# Install the latest git
brew install git



# Update shell to latest zsh
if [[ " $@ " =~ " --update-shell " ]]; then
	# Install the latest zsh shell
	brew install zsh

	# Change default shell to Homebrew installed zsh
	BREW_PREFIX=$(brew --prefix) # TODO: add to environment!

  if ! fgrep -q "${BREW_PREFIX}/bin/zsh" /etc/shells; then
	  echo "${BREW_PREFIX}/bin/zsh" | sudo tee -a /etc/shells;
	  chsh -s "${BREW_PREFIX}/bin/zsh";
	fi
fi

# Reload shell
exec $SHELL



# Install dotfiles
DF_BRANCH="macos"

alias dotfiles="/usr/bin/git --git-dir=$HOME/.dotfiles --work-tree=$HOME"

if [ ! -d "$HOME/.files" ]; then
  git clone --bare https://github.com/JasperV/dotfiles.git $HOME/.files
fi

# Reset the unstaged changes before updating
if [[ " $@ " =~ " --dotfiles-reset " ]]; then
  dotfiles reset --hard
fi

# Set flag to ignore untracked files
dotfiles config --local status.showUntrackedFiles no
# TODO: prevent adding all untracked files

dotfiles checkout $DF_BRANCH
dotfiles pull origin $DF_BRANCH

# Reload shell
exec $SHELL



# Install Homebrew packages
brew bundle







# use --quiet for brew install ;)

# # Install Homebrew + packages & casks
# ~/brew.sh
# exec $SHELL

# TODO: using brew leaves -r create an option to verify between installed and wanted... auto-remove etc...
# also allow for interactive pick list of uninstall
# same for other software managers... keep lists!

# # Upgrade any already-installed formulae.
# brew upgrade


# # Install ZSH and zsh-completions
# brew install zsh zsh-completions zsh-syntax-highlighting zsh-autosuggestions



# # Run macOS installation
# sh ~/.macos


# # https://blog.jamesauble.com/install-nvm-on-mac-with-brew-adb921fb92cc

# # Install nvm and node.js via nvm
# export NVM_DIR="$HOME/.nvm" && (
#   git clone https://github.com/creationix/nvm.git "$NVM_DIR"
#   cd "$NVM_DIR"
#   git checkout `git describe --abbrev=0 --tags --match "v[0-9]*" $(git rev-list --tags --max-count=1)`
# ) && \. "$NVM_DIR/nvm.sh"

# # Install node.js
# nvm install lts/*

# # Upgrade pip
# pip install --upgrade pip
# pip3 install --upgrade pip

# # Install pip apps
# pip3 install stronghold
# pip install beets
# pip install pyacoustid
# pip install discogs-client

# # TODO: add to own file for re-running on new node verions via nvm?
# # Install other npm modules
# # TODO: re-install on nvm update to other version... only for "main" update/change
# # so some modules need installing when switching to other version in project, some don't
# # https://github.com/nvm-sh/nvm#default-global-packages-from-file-while-installing

# # Install ZSH Pure prompt
# npm i -g pure-prompt

# # Install Alfred workflows via npm
# npm i -g alfred-emoj
# npm i -g alfred-npms
# npm i -g alfred-fkill
# npm i -g alfred-coolors
# npm i -g alfred-vpn
# npm i -g alfred-show-network-info
# npm i -g alfred-currency-conversion
# npm i -g alfred-polyglot
# # TODO: bitwarden
# # TODO: make note of other alfred plugins

# # Install better nanorc config
# curl https://raw.githubusercontent.com/scopatz/nanorc/master/install.sh | sh

# # For the c alias (syntax highlighted cat)
# sudo easy_install Pygments

# # Finally source all that is required
# source $HOME/.zshrc

# # Run stronghold
# stronghold -lockdown

# # Enable filevault
# # TODO: done by stronghold?
# sudo fdesetup enable
