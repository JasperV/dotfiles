#!/bin/zsh
set -e

# Install script

echo -n -e "\033]0;Install dotfiles for macOS\007"

# Navigate to home directory
cd ~

# Ask for the administrator password upfront
sudo -v

# Keep sudo session persistent
while true; do sudo -n true; sleep 60; kill -0 "$$" || exit; done 2>/dev/null &

# Validate your are yourself and an admin
[ "$USER" = "root" ] && abort "Run this script as yourself, not root."
groups | grep $Q -E "\b(admin)\b" || abort "Add $USER to the admin group."



# Check for macOS updates
touch /tmp/.com.apple.dt.CommandLineTools.installondemand.in-progress;
# TODO: enable sudo softwareupdate -i -a --restart
rm /tmp/.com.apple.dt.CommandLineTools.installondemand.in-progress



HOMEBREW_NO_ANALYTICS=1
# Install Homebrew if not already installed
if ! brew -v 2>/dev/null; then
  echo | /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
fi

brew analytics off

# Update brew to latest available version
brew update



# Update shell to latest zsh
brew install zsh

# Change default shell to Homebrew installed zsh
BREW_PREFIX=$(brew --prefix) # TODO: add to environment! in source file

if ! fgrep -q "${BREW_PREFIX}/bin/zsh" /etc/shells; then
  echo "${BREW_PREFIX}/bin/zsh" | sudo tee -a /etc/shells;
  chsh -s "${BREW_PREFIX}/bin/zsh";
fi

# Install the latest git
brew install git



# Install dotfiles
DF_BRANCH="macos"

if [ ! -d "$HOME/.files" ]; then
  git clone --bare https://github.com/JasperV/dotfiles.git $HOME/.files
fi

# Reset the unstaged changes before updating
git --git-dir=$HOME/.files --work-tree=$HOME reset --hard

# Set flag to ignore untracked files
git --git-dir=$HOME/.files --work-tree=$HOME config --local status.showUntrackedFiles no
# TODO: prevent adding all untracked files

git --git-dir=$HOME/.files --work-tree=$HOME checkout $DF_BRANCH
git --git-dir=$HOME/.files --work-tree=$HOME pull origin $DF_BRANCH



# Install Homebrew packages
brew bundle --quiet
brew cleanup



# Run macOS configuration
./.macos
# https://github.com/mathiasbynens/dotfiles verify from own old version
# https://github.com/MikeMcQuaid/strap
# https://github.com/alichtman/stronghold
# TODO: remove macos apps not needed
# TODO: run monolingual app










# antigen + oh-my-zsh
# https://phuctm97.com/blog/zsh-antigen-ohmyzsh
# https://github.com/zsh-users/antigen
# https://github.com/sindresorhus/pure#getting-started
# https://www.thorsten-hans.com/frictionless-zsh-and-oh-my-zsh-management-with-antigen
# https://github.com/belak/zsh-utils



# https://github.com/nvm-sh/nvm
# https://github.com/lukechilds/zsh-nvm
# # https://blog.jamesauble.com/install-nvm-on-mac-with-brew-adb921fb92cc

# # Install nvm and node.js via nvm
# export NVM_DIR="$HOME/.nvm" && (
#   git clone https://github.com/creationix/nvm.git "$NVM_DIR"
#   cd "$NVM_DIR"
#   git checkout `git describe --abbrev=0 --tags --match "v[0-9]*" $(git rev-list --tags --max-count=1)`
# ) && \. "$NVM_DIR/nvm.sh"

# # Install node.js
# nvm install lts/*

# TODO: make note of list of nvm->npm globals



# # Upgrade pip
# pip install --upgrade pip
# pip3 install --upgrade pip


# # TODO: add to own file for re-running on new node verions via nvm?
# # Install other npm modules
# # TODO: re-install on nvm update to other version... only for "main" update/change
# # so some modules need installing when switching to other version in project, some don't
# # https://github.com/nvm-sh/nvm#default-global-packages-from-file-while-installing

# # Install ZSH Pure prompt
# npm i -g pure-prompt

# # Install Alfred workflows via npm
# npm i -g alfred-emoj
# npm i -g alfred-npms
# npm i -g alfred-fkill
# npm i -g alfred-coolors
# npm i -g alfred-vpn
# npm i -g alfred-show-network-info
# npm i -g alfred-currency-conversion
# npm i -g alfred-polyglot
# # TODO: bitwarden
# # TODO: make note of other alfred plugins

# # Install better nanorc config
# curl https://raw.githubusercontent.com/scopatz/nanorc/master/install.sh | sh

# # For the c alias (syntax highlighted cat)
# sudo easy_install Pygments

# # Finally source all that is required
# source $HOME/.zshrc

# # Enable filevault
# # TODO: done by stronghold?
# sudo fdesetup enable

# Reload shell
# exec $SHELL
