#!/opt/homebrew/bin/bash

# Bitwarden git-credential helper
# Based on https://github.com/lastpass/lastpass-cli/blob/master/contrib/examples/git-credential-lastpass

# A credential helper for git to retrieve usernames and passwords from Bitwarden.
# For general usage, see https://git-scm.com/docs/gitcredentials.
# Here's a quick version:
# 1. Put this somewhere in your path.
# 2. git config --global credential.helper git-credential-bitwarden

# TODO: can we write this using: https://github.com/google/zx

declare -A params

# This means alfred plugin for bitwarden needs to be installed (it shares the session)
# https://github.com/blacs30/bitwarden-alfred-workflow
TOKEN=$(security find-generic-password -a token -s "com.lisowski-development.alfred.bitwarden" -w)

if [ "x$1" == "xget" ]; then
    read line
    while [ -n "$line" ]; do
        key=${line%%=*}
        value=${line#*=}
        params[$key]=$value
        read line
    done

    if [ "x${params['protocol']}" != "xhttps" ]; then
        exit
    fi

    if [ -z "${params["host"]}" ]; then
        exit
    fi

    if [[ $(bw login --check) != "You are logged in!" ]]; then
        echo "Please login to Bitwarden CLI to use it's git credential helper" > /dev/stderr
        exit
    fi

    # TODO: simplify, less redundant
    if [ -z "${params["username"]}" ]; then
      user=`bw list items --url ${params["host"]} --session ${TOKEN} | fx '.[0].login.username'`
      pass=`bw list items --url ${params["host"]} --session ${TOKEN}| fx '.[0].login.password'`
    else
      user=`bw list items --search ${params["username"]} --url ${params["host"]} --session ${TOKEN} | fx '.[0].login.username'`
      pass=`bw list items --search ${params["username"]} --url ${params["host"]} --session ${TOKEN}| fx '.[0].login.password'`
    fi

    if [ "x$user" == "x" ] || [ "x$pass" == "x" ]; then
        echo "Couldn't find credentials in Bitwarden." > /dev/stderr
        exit
    fi

    echo username=$user
    echo password=$pass
fi
